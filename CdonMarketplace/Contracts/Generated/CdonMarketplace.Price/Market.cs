//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.521.0.
namespace CdonMarketplace.Price
{
    
    
    /// <summary>
    /// <para>Please see the documentation regarding valid values for the "shippingCost"- and "vat"-elements.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Please see the documentation regarding valid values for the \"shippingCost\"- and \"" +
        "vat\"-elements.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.521.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("market", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/price")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarketB2BSE))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarketDK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarketFI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarketNO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarketSE))]
    public abstract partial class Market
    {
        
        /// <summary>
        /// <para>Amount includes VAT</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1000000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "1000000")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("salePrice")]
        public decimal SalePrice { get; set; }
        
        /// <summary>
        /// <para>Amount includes VAT</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1000000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "1000000")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("originalPrice")]
        public decimal OriginalPrice { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("isShippedFromEU")]
        public bool IsShippedFromEUValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsShippedFromEU property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsShippedFromEUValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsShippedFromEU
        {
            get
            {
                if (this.IsShippedFromEUValueSpecified)
                {
                    return this.IsShippedFromEUValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsShippedFromEUValue = value.GetValueOrDefault();
                this.IsShippedFromEUValueSpecified = value.HasValue;
            }
        }
    }
}
