//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.521.0.
namespace CdonMarketplace.Product
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.521.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("descriptionSections", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DescriptionSections
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DescriptionSection> _se;
        
        [System.Xml.Serialization.XmlArrayAttribute("se")]
        [System.Xml.Serialization.XmlArrayItemAttribute("section", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
        public System.Collections.Generic.List<DescriptionSection> Se
        {
            get
            {
                return this._se;
            }
            set
            {
                this._se = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Se collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeSpecified
        {
            get
            {
                return (this.Se?.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DescriptionSections" /> class.</para>
        /// </summary>
        public DescriptionSections()
        {
            this._se = new System.Collections.Generic.List<DescriptionSection>();
            this._dk = new System.Collections.Generic.List<DescriptionSection>();
            this._no = new System.Collections.Generic.List<DescriptionSection>();
            this._fi = new System.Collections.Generic.List<DescriptionSection>();
            this._en = new System.Collections.Generic.List<DescriptionSection>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DescriptionSection> _dk;
        
        [System.Xml.Serialization.XmlArrayAttribute("dk")]
        [System.Xml.Serialization.XmlArrayItemAttribute("section", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
        public System.Collections.Generic.List<DescriptionSection> Dk
        {
            get
            {
                return this._dk;
            }
            set
            {
                this._dk = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Dk collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DkSpecified
        {
            get
            {
                return (this.Dk?.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DescriptionSection> _no;
        
        [System.Xml.Serialization.XmlArrayAttribute("no")]
        [System.Xml.Serialization.XmlArrayItemAttribute("section", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
        public System.Collections.Generic.List<DescriptionSection> No
        {
            get
            {
                return this._no;
            }
            set
            {
                this._no = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the No collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoSpecified
        {
            get
            {
                return (this.No?.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DescriptionSection> _fi;
        
        [System.Xml.Serialization.XmlArrayAttribute("fi")]
        [System.Xml.Serialization.XmlArrayItemAttribute("section", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
        public System.Collections.Generic.List<DescriptionSection> Fi
        {
            get
            {
                return this._fi;
            }
            set
            {
                this._fi = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Fi collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiSpecified
        {
            get
            {
                return (this.Fi?.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DescriptionSection> _en;
        
        [System.Xml.Serialization.XmlArrayAttribute("en")]
        [System.Xml.Serialization.XmlArrayItemAttribute("section", Namespace="https://schemas.cdon.com/product/4.0/4.12.0/product")]
        public System.Collections.Generic.List<DescriptionSection> En
        {
            get
            {
                return this._en;
            }
            set
            {
                this._en = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the En collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnSpecified
        {
            get
            {
                return (this.En?.Count != 0);
            }
        }
    }
}
